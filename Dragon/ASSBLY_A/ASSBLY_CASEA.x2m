*----
* case ASSBLY_CASEA
* 295-group/26group eighth assembly in DRAGON
* Author: A. Canbakan
*----
LINKED_LIST GEOSS GEON1 GEON2 TRACKSS TRACKN1 TRACKN2 LIBRARY LIBRARY2
            SYS FLUX FLUX2 EDITION LIBEQ DONNEES LIBHOM BURNUP
	    EDIHOM RES_F RES_L ;
MODULE SYBILT: G2S: SALT: MCCGT: USS: ASM: FLU: EDI: SPH: UTL: DELETE:
       END: EVO: GREP: LIB: ABORT: ;
REAL Rcomb1 Rcomb2 Rcomb3 Rcomb4 R_int_TG R_ext_TG R_int_TI R_ext_TI
     R_int_G R_ext_G Cote CoteL RmodeN1 Lame ;
SEQ_ASCII ASSBLY_CASEA :: FILE './ASSBLY_CASEA_g2s.txt' ;
SEQ_ASCII BCOND2_F :: FILE './ASSBLY_CASEA_R_BCOND2.txt' ;
SEQ_ASCII BCOND2_L :: FILE './ASSBLY_CASEA_R_BCOND2_LAST.txt' ;
SEQ_ASCII BURN2 :: FILE './ASSBLY_CASEA_BURN2.txt' ;
SEQ_ASCII FIGASB_CASEA :: FILE './FIGASB_CASEA.ps' ;
SEQ_BINARY TF_EXC ;
INTEGER an2d := 8 ;
REAL densur := 20.0 ;
INTEGER istep maxstep istepNext maxautop iAutop := 0 77 0 8 1 ;
REAL delr BUbeg BUend Tbeg Tend := 0.01 0.0 0.0 0.0 0.0 ;
REAL Fuelpwr Keff := 39.0 0.0 ;
REAL BU BUautop  := 0.0 0.0 ;
STRING Library := "DLIB_295" ;
PROCEDURE Geo_SS Geo_N1 Geo_N2 Mix_UOX MultLIBEQ ;
PROCEDURE assertS ;

************************************************************************
*  BEGIN GEOMETRY                                                      *
************************************************************************
EVALUATE Rcomb4 := 0.4096 ;
EVALUATE Rcomb1 := 0.5 SQRT Rcomb4 * ;
EVALUATE Rcomb2 := 0.8 SQRT Rcomb4 * ;
EVALUATE Rcomb3 := 0.95 SQRT Rcomb4 * ;
EVALUATE R_int_TG := 0.5605 ;
EVALUATE R_ext_TG := 0.6225 ;
EVALUATE R_int_TI := 0.5725 ;
EVALUATE R_ext_TI := 0.6225 ;
EVALUATE R_int_G := 0.4180 ;
EVALUATE R_ext_G := 0.4750 ;
EVALUATE Cote := 1.26 ;
EVALUATE CoteL := 1.302 ;
EVALUATE Lame := CoteL Cote - ;
EVALUATE RmodeN1 := 0.670 ;

GEOSS := Geo_SS :: <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                      <<R_int_TG>> <<R_ext_TG>> <<R_int_TI>>
                      <<R_ext_TI>> <<R_int_G>> <<R_ext_G>> <<Cote>>
                      <<CoteL>> ;

GEON1 := Geo_N1 :: <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                      <<R_int_TG>> <<R_ext_TG>> <<R_int_TI>>
                      <<R_ext_TI>> <<R_int_G>> <<R_ext_G>> <<Cote>>
                      <<CoteL>> <<RmodeN1>> ;

GEON2 := Geo_N2 :: <<Rcomb1>> <<Rcomb2>> <<Rcomb3>> <<Rcomb4>>
                      <<R_int_TG>> <<R_ext_TG>> <<R_int_TI>>
                      <<R_ext_TI>> <<R_int_G>> <<R_ext_G>> <<Cote>>
                      <<Lame>> ;
ASSBLY_CASEA FIGASB_CASEA := G2S: GEON2 ;
************************************************************************
*  END GEOMETRY                                                        *
************************************************************************

************************************************************************
*  BEGIN DECLARATION                                                   *
************************************************************************
DONNEES := UTL: ::
    CREA
      BURN <<maxstep>> =
            0.0      10.0      30.0      50.0      75.0     150.0
          250.0     375.0     500.0     625.0     750.0    1000.0
         1250.0    1500.0    1750.0    2000.0    2500.0    3000.0
         3500.0    4000.0    4500.0    5000.0    5500.0    6000.0
         6500.0    7000.0    7500.0    8000.0    8500.0    9000.0
         9500.0   10000.0   10500.0   11000.0   11500.0   12000.0
        12500.0   13000.0   13500.0   14000.0   14500.0   15000.0
        15500.0   16000.0   16500.0   17000.0   17500.0   18000.0
        18500.0   19000.0   19500.0   20000.0   22000.0   24000.0
        26000.0   28000.0   30000.0   32000.0   34000.0   36000.0
        38000.0   40000.0   42000.0   44000.0   46000.0   48000.0
        50000.0   52000.0   54000.0   56000.0   58000.0   60000.0
        62000.0   64000.0   66000.0   68000.0   70000.0
    ;
DONNEES := UTL: DONNEES ::
    CREA
          AUTOP <<maxautop>> =
         4000.0    8000.0   12000.0   24000.0   36000.0   48000.0
        60000.0   70000.0
    ;
************************************************************************
*  END DECLARATION                                                     *
************************************************************************
************************************************************************
*  BEGIN TRACKING                                                      *
************************************************************************
! Level One
TRACKSS := SYBILT: GEOSS ::
  EDIT 0
  MAXR 500
  MAXZ  1000000
  TITLE 'TRACKING FOR ASSEMBLY SS'
  QUA2 20 3
  DP01  ;
TRACKN1 := SYBILT: GEON1 ::
  EDIT 0
  MAXR 500
  MAXZ  1000000
  TITLE 'TRACKING FOR ASSEMBLY N1'
  QUA2 20 3
  DP01  ;
! Level two
TRACKN2 TF_EXC := SALT: ASSBLY_CASEA ::
  EDIT 3
  ALLG
  TSPC EQW2 <<an2d>> <<densur>> REND
;
TRACKN2 := MCCGT: TRACKN2 TF_EXC ::
  CACB 4 AAC 80 TMT EPSI 1E-5 MCU 10000 ;

************************************************************************
*  END TRACKING                                                        *
************************************************************************
************************************************************************
*  BEGIN LIBRARY READING                                               *
************************************************************************
LIBRARY := Mix_UOX :: <<Library>>  ;

************************************************************************
*  END LIBRARY READING                                                 *
************************************************************************
************************************************************************
*  BEGIN DEPLETION                                                     *
************************************************************************
WHILE istep maxstep < DO

************************************************************************
*  BEGIN FIRST LEVEL FLUX CALCULATION                                  *
************************************************************************

 EVALUATE istep := istep 1 + ;
 ECHO "istep: " istep "/" maxstep ;

 EVALUATE BUbeg Tbeg := BUend Tend ;
 GREP: DONNEES :: GETVAL 'BURN' <<istep>> >>BUend<< ;
 EVALUATE Tend := BUend Fuelpwr / ;
 ECHO Tbeg ;
 ECHO Tend ;

*----
* USS
*----
  IF istep 1 = THEN
       LIBRARY2 := USS: LIBRARY TRACKSS :: EDIT 1 PASS 2 ARM GRMIN 52

          CALC REGI W1 U235 ALL

                REGI W1 U238 3
                REGI W2 U238 4
                REGI W3 U238 5
                REGI W4 U238 6

                REGI W1 U238 9
                REGI W2 U238 10
                REGI W3 U238 11
                REGI W4 U238 12

                REGI W1 U238 94
                REGI W2 U238 95
                REGI W3 U238 96
                REGI W4 U238 97

                REGI W1 U238 114
                REGI W2 U238 115
                REGI W3 U238 116
                REGI W4 U238 117

                REGI W1 U238 122
                REGI W2 U238 123
                REGI W3 U238 124
                REGI W4 U238 125

                REGI W1 U238 126
                REGI W2 U238 127
                REGI W3 U238 128
                REGI W4 U238 129

                REGI W1 U238 154
                REGI W2 U238 155
                REGI W3 U238 156
                REGI W4 U238 157

                REGI W1 U238 158
                REGI W2 U238 159
                REGI W3 U238 160
                REGI W4 U238 161

          ENDC ;
  ELSE
    GREP: DONNEES :: GETVAL "AUTOP" <<iAutop>> >>BUautop<< ;
    GREP: DONNEES :: GETVAL "BURN" <<istep>> >>BU<< ;
        IF BUautop BU = THEN
       LIBRARY2 := USS: LIBRARY LIBRARY2 TRACKSS BURNUP :: EDIT 1 PASS 2
                   GRMIN 52

          CALC REGI W1 U235 ALL

                REGI W1 U238 3
                REGI W2 U238 4
                REGI W3 U238 5
                REGI W4 U238 6

                REGI W1 U238 9
                REGI W2 U238 10
                REGI W3 U238 11
                REGI W4 U238 12

                REGI W1 U238 94
                REGI W2 U238 95
                REGI W3 U238 96
                REGI W4 U238 97

                REGI W1 U238 114
                REGI W2 U238 115
                REGI W3 U238 116
                REGI W4 U238 117

                REGI W1 U238 122
                REGI W2 U238 123
                REGI W3 U238 124
                REGI W4 U238 125

                REGI W1 U238 126
                REGI W2 U238 127
                REGI W3 U238 128
                REGI W4 U238 129

                REGI W1 U238 154
                REGI W2 U238 155
                REGI W3 U238 156
                REGI W4 U238 157

                REGI W1 U238 158
                REGI W2 U238 159
                REGI W3 U238 160
                REGI W4 U238 161

          ENDC ;
        EVALUATE iAutop := iAutop 1 + ;
     ENDIF ;
  ENDIF ;

************************************************************************
*  BEGIN FIRST LEVEL FLUX CALCULATION                                  *
************************************************************************
IF istep 1 > THEN
* homogenize from 161 mixtures to 37 mixtures and condense to 1-group
* in order to average number densities
  EDIHOM := EDI: FLUX2 LIBEQ TRACKN2 ::
   EDIT 0
   MICR ALL
   COND
   MERG MIX
      1   2   3   4   5   6   7   8   9  10  11  12   3   4   5   6   9
     10  11  12   9  10  11  12  25   3   4   5   6   3   4   5   6   3
      4   5   6   9  10  11  12   9  10  11  12   3   4   5   6   9  10
     11  12   3   4   5   6   9  10  11  12   9  10  11  12   3   4   5
      6   3   4   5   6   3   4   5   6   3   4   5   6   3   4   5   6
      3   4   5   6   9  10  11  12  94  95  96  97   9  10  11  12   9
     10  11  12  94  95  96  97   9  10  11  12 114 115 116 117 114 115
    116 117 122 123 124 125 126 127 128 129 126 127 128 129 126 127 128
    129 126 127 128 129 126 127 128 129 126 127 128 129 126 127 128 129
    154 155 156 157 158 159 160 161
   SAVE ON HOMOGENE
  ;
 LIBHOM := EDIHOM ::
  STEP UP HOMOGENE
 ;

* recover number densities from LIBHOM and copy them in LIBRARY2
 EDIHOM := DELETE: EDIHOM ;
 LIBRARY2 := LIB: LIBRARY2 LIBHOM ::
  EDIT 0
  MAXS
  MIX   3 MIX   4 MIX   5 MIX   6 MIX   9 MIX  10 MIX  11 MIX  12
  MIX  94 MIX  95 MIX  96 MIX  97 MIX 114 MIX 115 MIX 116 MIX 117
  MIX 122 MIX 123 MIX 124 MIX 125 MIX 126 MIX 127 MIX 128 MIX 129
  MIX 154 MIX 155 MIX 156 MIX 157 MIX 158 MIX 159 MIX 160 MIX 161
  ;
 LIBEQ LIBHOM := DELETE: LIBEQ LIBHOM ;
ENDIF ;

SYS := ASM: LIBRARY2 TRACKN1 :: ARM EDIT 0 ;
FLUX := FLU: LIBRARY2 SYS TRACKN1 ::
     EDIT 1 TYPE K ;

*----
*  26 groups energy condensation
*----
EDITION := EDI: FLUX LIBRARY2 TRACKN1 ::
    EDIT 0
    MICR ALL
    MERG MIX
    COND  10  14  18  26  33  40  49  56  66 84 150 210 241 244 247
    252 255 258 261 268 273 277 281 286 291
    SAVE ON COND26 ;

LIBEQ := EDITION :: STEP UP COND26 ;

LIBEQ := SPH: LIBEQ TRACKN1 :: EDIT 2 ;

FLUX SYS EDITION := DELETE: FLUX SYS EDITION ;
************************************************************************
*  END FIRST LEVEL FLUX CALCULATION                                    *
************************************************************************
************************************************************************
*  BEGIN SECOND LEVEL FLUX CALCULATION                                 *
************************************************************************
LIBEQ := MultLIBEQ LIBEQ ;
SYS := ASM: LIBEQ TRACKN2 TF_EXC :: ARM EDIT 1 ;

IF istep 1 = THEN
FLUX2 := FLU: LIBEQ SYS TRACKN2 TF_EXC ::
     EDIT 1 TYPE K ;
ELSE
   FLUX2 := FLU: FLUX2 LIBEQ SYS TRACKN2 TF_EXC ::
     EDIT 1 TYPE K ;
ENDIF ;

IF istep 1 = THEN
  RES_F := EDI: FLUX2 LIBEQ TRACKN2 :: EDIT 5
  MICR 3 U235 U238 O16
  MERG MIX
  COND 19
  SAVE ON COND2
  ;
  BCOND2_F := RES_F :: STEP UP COND2 ;
ENDIF ;

IF istep maxstep = THEN
  RES_L := EDI: FLUX2 LIBEQ TRACKN2 :: EDIT 5
  MICR 3 U235 U238 O16
  MERG MIX
  COND 19
  SAVE ON COND2
  ;
  BCOND2_L := RES_L :: STEP UP COND2 ;
ENDIF ;

GREP: FLUX2 :: GETVAL 'K-EFFECTIVE  ' 1 1 1 >>Keff<< ;
ECHO "+++ Burnup=" BUend " Keff=" Keff ;

 IF istep maxstep < THEN
  EVALUATE istepNext := istep 1 + ;
  GREP: DONNEES :: GETVAL 'BURN' <<istepNext>> >>BUend<< ;
  EVALUATE Tend := BUend Fuelpwr / ;

  IF istep 1 = THEN
     BURNUP LIBEQ := EVO: LIBEQ FLUX2 TRACKN2 ::
      EDIT 3 DEPL <<Tbeg>> <<Tend>> DAY POWR <<Fuelpwr>>
      EXPM 1.0E15 GLOB ;
  ELSE
     BURNUP LIBEQ := EVO: BURNUP LIBEQ FLUX2 TRACKN2 ::
      EDIT 3 DEPL <<Tbeg>> <<Tend>> DAY POWR <<Fuelpwr>>
      EXPM 1.0E15 GLOB ;
  ENDIF ;

  SYS := DELETE: SYS ;

 ENDIF ;

************************************************************************
*  END SECOND LEVEL FLUX CALCULATION                                   *
************************************************************************

ENDWHILE ;

BURN2 := BURNUP ;

assertS FLUX2 :: K-EFFECTIVE 1 0.7436790 ;
************************************************************************
*  END SECOND LEVEL FLUX CALCULATION                                   *
************************************************************************

ECHO "test ASSBLY_CASEA completed" ;
END: ;
